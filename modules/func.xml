<?xml version="1.0" ?>

<!-- Base elements for data keeping systems
     -->

<!DOCTYPE node SYSTEM "/usr/share/grayb/conf/objspec.dtd"> 

<node id="FuncComps" parent="Elem">

   <!-- Input of Func with Int arg/res -->
   <node id="Inp_FInt" parent=":Elem:SysComps/ConnPoint"> 
       <cont node="Required" val="MDIntGet"/>
       <cont node="Provided" val="MDataObserver"/>
   </node>

   <!-- Extended Input of Func with Int arg/res -->
   <node id="Inp_FEInt" parent=":Elem:SysComps/Extender"> 
       <cont node="Int/Provided" val="MDIntGet"/>
       <cont node="Int/Required" val="MDataObserver"/>
   </node>

   <!-- Output of Func with Int arg/res -->
   <node id="Out_FInt" parent=":Elem:SysComps/ConnPoint"> 
       <cont node="Required" val="MDataObserver"/>
       <cont node="Provided" val="MDIntGet"/>
   </node>

   <!-- Extended Output of Func with Int arg/res -->
   <node id="Out_FEInt" parent=":Elem:SysComps/Extender"> 
       <cont node="Int/Provided" val="MDataObserver"/>
       <cont node="Int/Required" val="MDIntGet"/>
   </node>


   <!-- Output of Bool Func -->
   <node id="Out_FBool" parent=":Elem:SysComps/ConnPoint"> 
       <cont node="Required" val="MDataObserver"/>
       <cont node="Provided" val="MDBoolGet"/>
   </node>

   <!-- Input of Bool Func -->
   <node id="Inp_FBool" parent=":Elem:SysComps/ConnPoint"> 
       <cont node="Required" val="MDBoolGet"/>
       <cont node="Provided" val="MDataObserver"/>
   </node>

   <!-- Output of Func with Vect Int -->
   <node id="Out_FVInt" parent=":Elem:SysComps/ConnPoint"> 
       <cont node="Required" val="MDataObserver"/>
       <cont node="Provided" val="MVIntGet"/>
   </node>

    <!-- Int function wo inputs  -->
    <node id="FuncInt" parent=":Elem:IncapsComps/Incaps"> 
    	<add node="Capsule"> 
	    <!-- Output -->
	    <node id="out" parent="../../Out_FInt"/> 
    	</add>
    </node>

    <!-- Input of Transition Func with Int arg/res -->
    <node id="Inp_TFInt" parent=":Elem:SysComps/ConnPoint"> 
	<cont node="Required" val="MDIntGet"/>
    </node>

    <!-- Output of Transition Func with Int arg/res -->
    <node id="Out_TFInt" parent=":Elem:SysComps/ConnPoint"> 
	<cont node="Provided" val="MDIntGet"/>
    </node>

    <!-- Extended Input of Transition Func with Int arg/res -->
    <node id="Inp_TFEInt" parent=":Elem:SysComps/Extender"> 
	<cont node="Int/Provided" val="MDIntGet"/>
    </node>

    <!-- Extended Output of Transition Func with Int arg/res -->
    <node id="Out_TFEInt" parent=":Elem:SysComps/Extender"> 
	<cont node="Int/Required" val="MDIntGet"/>
    </node>



    <!-- Output of Bool Transition Func -->
    <node id="Out_TFBool" parent=":Elem:SysComps/ConnPoint"> 
	<cont node="Provided" val="MDBoolGet"/>
    </node>

    <!-- Input of Bool Transition Func -->
    <node id="Inp_TFBool" parent=":Elem:SysComps/ConnPoint"> 
       <cont node="Required" val="MDBoolGet"/>
   </node>

    <!-- Input of Transition Func with Var arg/res -->
    <node id="Inp_TFVar" parent=":Elem:SysComps/ConnPoint"> 
	<cont node="Required" val="MDVarGet"/>
    </node>

    <!-- Output of Transition Func with Var arg/res -->
    <node id="Out_TFVar" parent=":Elem:SysComps/ConnPoint"> 
	<cont node="Provided" val="MDVarGet"/>
    </node>




    <!-- Int function with simgle input  -->
    <node id="FuncIntSi" parent=":Elem:IncapsComps/Incaps"> 

    	<add node="Capsule"> 
	    <node id="inp" parent=":Elem:SysComps/ConnPoint"> 
		<cont node="Required" val="MDIntGet"/>
		<cont node="Provided" val="MDataObserver"/>
	    </node>
	    <node id="out" parent=":Elem:SysComps/ConnPoint"> 
		<cont node="Required" val="MDataObserver"/>
		<cont node="Provided" val="MDIntGet"/>
	    </node>
    	</add>
    </node>

    <!-- Bool function with simgle input  -->
    <node id="FuncBoolSi" parent=":Elem:IncapsComps/Incaps"> 
    	<add node="Capsule"> 
	    <!-- Output -->
	    <node id="out" parent="../../Out_FBool"/> 
    	</add>
    </node>


    <node id="FuncIncInt" parent=":Elem:IncapsComps/Incaps"> 

    	<add node="Agents"> 
	    <node id="func_agt" parent="AIncInt"> 
	    </node>
    	</add>

    	<add node="Capsule"> 
	    <node id="inp" parent=":Elem:SysComps/ConnPoint"> 
		<cont node="Required" val="MDIntGet"/>
		<cont node="Provided" val="MDataObserver"/>
	    </node>
	    <node id="out" parent=":Elem:SysComps/ConnPoint"> 
		<cont node="Required" val="MDataObserver"/>
		<cont node="Provided" val="MDIntGet"/>
	    </node>
    	</add>
    </node>

    <!-- Function of integer result -->
    <node id="FuncIntRes" parent=":Elem:IncapsComps/Incaps"> 
    	<add node="Agents"> 
	    <node id="func_agt" parent="AFunIntRes"> 
	    </node>
    	</add>
    	<add node="Capsule"> 
	    <node id="inp" parent=":Elem:SysComps/ConnPoint"> 
		<cont node="Required" val="MDIntGet"/>
		<cont node="Provided" val="MDataObserver"/>
	    </node>
	    <node id="out" parent=":Elem:SysComps/ConnPoint"> 
		<cont node="Required" val="MDIntSet"/>
	    </node>
    	</add>
    </node>

    <!-- Function of integer addition -->
    <node id="FuncAddInt" parent="FuncIntSi"> 
	<add node="Agents"> 
	    <node id="func_agt" parent="AAddInt"> 
	    </node>
	</add>
    </node>

    <!-- Function of integer addition wo caching -->
    <node id="FAddInt" parent="FuncIntSi"> 
	<add node="Agents"> <node id="func_agt" parent="AFAddInt"/> </add>
    </node>

    <!-- Function of integer addition wo caching -->
    <node id="FSubInt" parent="FuncInt"> 
	<add node="Agents"> <node id="func_agt" parent="AFSubInt"/> </add>
	<add node="Capsule"> 
	    <!-- Input positives -->
	    <node id="InpP" parent="../../Inp_FInt"/> 
	    <!-- Input negatives -->
	    <node id="InpN" parent="../../Inp_FInt"/> 
	</add>
    </node>

    <!-- Function of restriction to upper and lower limits -->
    <node id="FLimInt" parent="FuncInt"> 
	<add node="Agents"> <node id="func_agt" parent="AFLimInt"/> </add>
	<add node="Capsule"> 
	    <!-- Input  -->
	    <node id="Inp" parent="../../Inp_FInt"/> 
	    <!-- Input positives -->
	    <node id="Inp_LimU" parent="../../Inp_FInt"/> 
	    <!-- Input negatives -->
	    <node id="Inp_LimL" parent="../../Inp_FInt"/> 
	</add>
    </node>

    <!-- Function of division -->
    <node id="FDivInt" parent="FuncInt"> 
	<add node="Agents"> <node id="func_agt" parent="AFDivInt"/> </add>
	<add node="Capsule"> 
	    <!-- Divided  -->
	    <node id="Inp_DD" parent="../../Inp_FInt"/> 
	    <!-- Divisor -->
	    <node id="Inp_DR" parent="../../Inp_FInt"/> 
	</add>
    </node>



    <!-- Function of convolution. Working function is external -->
    <node id="FConvInt" parent="FuncIntSi"> 
	<add node="Agents"> <node id="func_agt" parent="AFConvInt"/> </add>
	<add node="Capsule"> 
	    <!-- Output for passing argunent to Working function  -->
	    <node id="Out_WFarg" parent="../../Out_FEInt"/> 
	    <!-- Input for getting result from Working function  -->
	    <node id="Inp_WFres" parent="../../Inp_FInt"/> 
	</add>
	<!-- Value of Working function argument -->
	<node id="WFArg" parent="**/DataComps/DataSNInt"/>
	<node parent="Edge"> <cont node="P1" val="../../WFArg/Capsule/out"/> <cont node="P2" val="../../Capsule/Out_WFarg/Int"/> </node>
    </node>

    <!-- Int  inputs to Int vector conversation -->
    <node id="FuncInpToVectInt" parent=":Elem:IncapsComps/Incaps"> 
	<add node="Capsule"> 
	    <!-- Input -->
	    <node id="Inp" parent="../../Inp_FInt"/> 
	    <!-- Output -->
	    <node id="Out" parent="../../Out_FVInt"/> 
	</add>
    </node>

    <!-- Function Inp1 GT Inp2  -->
    <node id="FGTInt" parent="FuncBoolSi"> 
	<add node="Agents"> <node id="func_agt" parent="AFGTInt"/> </add>
    	<add node="Capsule"> 
	    <node id="Inp1" parent="../../Inp_FInt"/> 
	    <node id="Inp2" parent="../../Inp_FInt"/> 
    	</add>
    </node>

    <!-- Function Bool to Int  -->
    <node id="FBoolToInt" parent="FuncInt"> 
	<add node="Agents"> <node id="func_agt" parent="AFBoolToInt"/> </add>
    	<add node="Capsule"> 
	    <node id="Inp" parent="../../Inp_FBool"/> 
    	</add>
    </node>

    <!-- Transition function. It doesn's support observation of inputs change -->

    <!-- Int Transition function wo inputs  -->
    <node id="TFuncInt" parent=":Elem:IncapsComps/Incaps"> 
    	<add node="Capsule"> 
	    <!-- Output -->
	    <node id="out" parent="../../Out_TFInt"/> 
    	</add>
    </node>

    <!-- Bool Transition function wo inputs  -->
    <node id="TFuncBool" parent=":Elem:IncapsComps/Incaps"> 
    	<add node="Capsule"> 
	    <!-- Output -->
	    <node id="out" parent="../../Out_TFBool"/> 
    	</add>
    </node>

    <!-- Var Transition function wo inputs  -->
    <node id="TFuncVar" parent=":Elem:IncapsComps/Incaps"> 
    	<add node="Capsule"> 
	    <!-- Output -->
	    <node id="out" parent="../../Out_TFVar"/> 
    	</add>
    </node>




    <!-- Function of integer addition wo caching -->
    <node id="TFAddInt" parent="TFuncInt"> 
	<add node="Agents"> <node id="func_agt" parent="AFAddInt"/> </add>
	<add node="Capsule"> 
	    <!-- Input -->
	    <node id="inp" parent="../../Inp_TFInt"/> 
	</add>
    </node>

    <!-- Function of integer addition wo caching -->
    <node id="TFSubInt" parent="TFuncInt"> 
	<add node="Agents"> <node id="func_agt" parent="AFSubInt"/> </add>
	<add node="Capsule"> 
	    <!-- Input positives -->
	    <node id="InpP" parent="../../Inp_TFInt"/> 
	    <!-- Input negatives -->
	    <node id="InpN" parent="../../Inp_TFInt"/> 
	</add>
    </node>

    <!-- Function of restriction to upper and lower limits -->
    <node id="TFLimInt" parent="TFuncInt"> 
	<add node="Agents"> <node id="func_agt" parent="AFLimInt"/> </add>
	<add node="Capsule"> 
	    <!-- Input  -->
	    <node id="Inp" parent="../../Inp_TFInt"/> 
	    <!-- Input positives -->
	    <node id="Inp_LimU" parent="../../Inp_TFInt"/> 
	    <!-- Input negatives -->
	    <node id="Inp_LimL" parent="../../Inp_TFInt"/> 
	</add>
    </node>

    <!-- Function of division -->
    <node id="TFDivInt" parent="TFuncInt"> 
	<add node="Agents"> <node id="func_agt" parent="AFDivInt"/> </add>
	<add node="Capsule"> 
	    <!-- Divided  -->
	    <node id="Inp_DD" parent="../../Inp_TFInt"/> 
	    <!-- Divisor -->
	    <node id="Inp_DR" parent="../../Inp_TFInt"/> 
	</add>
    </node>


    <!-- Function of convolution. Working function is external -->
    <node id="TFConvInt" parent="TFuncInt"> 
	<add node="Agents"> <node id="func_agt" parent="AFConvInt"/> </add>
	<add node="Capsule"> 
	    <node id="inp" parent="../../Inp_TFInt"/> 
	    <!-- Output for passing argunent to Working function  -->
	    <node id="Out_WFarg" parent="../../Out_TFEInt"/> 
	    <!-- Input for getting result from Working function  -->
	    <node id="Inp_WFres" parent="../../Inp_TFInt"/> 
	</add>
	<!-- Value of Working function argument -->
	<node id="WFArg" parent="**/DataComps/DataSUInt"/>
	<node parent="Edge"> <cont node="P1" val="../../WFArg/Capsule/out"/> <cont node="P2" val="../../Capsule/Out_WFarg/Int"/> </node>
    </node>

    <!-- Function Inp1 GT Inp2  -->
    <node id="TFGTInt" parent="TFuncBool"> 
	<add node="Agents"> <node id="func_agt" parent="AFGTInt"/> </add>
    	<add node="Capsule"> 
	    <node id="Inp1" parent="../../Inp_TFInt"/> 
	    <node id="Inp2" parent="../../Inp_TFInt"/> 
    	</add>
    </node>

    <!-- Function Bool to Int  -->
    <node id="TFBoolToInt" parent="TFuncInt"> 
	<add node="Agents"> <node id="func_agt" parent="AFBoolToInt"/> </add>
    	<add node="Capsule"> 
	    <node id="Inp" parent="../../Inp_TFBool"/> 
    	</add>
    </node>

    <!-- Variable type function of addition wo caching -->
    <node id="TFAddVar" parent="TFuncVar"> 
	<add node="Agents"> <node id="func_agt" parent="AFAddVar"/> </add>
	<add node="Capsule"> 
	    <!-- Input -->
	    <node id="inp" parent="../../Inp_TFVar"/> 
	</add>
    </node>






</node>

