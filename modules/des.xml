<?xml version="1.0" ?>

<!-- Base elements for Discrete Events System layer. 
     -->

<!DOCTYPE node SYSTEM "/usr/share/grayb/conf/objspec.dtd"> 

<node id="DesComps" parent="Elem">

    <!-- DES logging event -->
    <node id="DesLogevent" parent="Elem" />
    
    <!-- Output socket -->
    <node id="StOutSocket" parent="/*/Modules/SysComps/SocketInp">
	<!-- Pin Des observer. Requires DES observer interface to handle activation of the state -->
	<node id="PinObs" parent="/*/Modules/SysComps/ConnPoint"> 
	    <cont node="./Provided" val="MDesObserver"/>
	</node>
	<!-- Pin Data observer. Provides data interface -->
	<node id="PinData" parent="/*/Modules/SysComps/ConnPoint"> 
	</node>
    </node>

    <!-- State Output socket, multicontent -->
    <node id="StOutSocketMc" parent="/*/Modules/SysComps/SocketMc">
	<cont id="About" val="State Output socket, multicontent"/>
	<node id="PinObs" parent="ConnPointMc"> 
	    <cont id="About" val="Pin Des observer. Requires DES observer interface to handle activation of the state"/>
	    <cont id="Provided" val="MDesObserver"/>
	</node>
	<node id="PinData" parent="ConnPointMc"> 
	    <cont id="About" val="Pin Data observer. Provides data interface"/>
	</node>
    </node>

    <!-- State Output socket, multicontent, monolitic -->
    <node id="StOutSocketMcm" parent="ASocketMcm">
	<cont id="About" val="State Output socket, multicontent, monolitic"/>
	<cont id="Direction" val="Out"/>
	<node id="PinObs" parent="ConnPointMc"> 
	    <cont id="About" val="Pin Des observer. Requires DES observer interface to handle activation of the state"/>
	    <cont id="Provided" val="MDesObserver"/>
	</node>
	<node id="PinData" parent="ConnPointMc"> 
	    <cont id="About" val="Pin Data observer. Provides data interface"/>
	</node>
    </node>

    <!-- State Output socket, multicontent, monolitic, unit pins -->
    <node id="StOutSocketMcmu" parent="ASocketMcm">
	<cont id="About" val="State Output socket, multicontent, monolitic"/>
	<cont id="Direction" val="Out"/>
	<node id="PinObs" parent="ConnPointMc"/> 
	<cont node="./PinObs" id="About" val="Pin Des observer. Requires DES observer interface to handle activation of the state"/>
	<cont node="./PinObs" id="Provided" val="MDesObserver"/>

	<node id="PinData" parent="ConnPointMcu"/> 
	<cont node="./PinData" id="About" val="Pin Data observer. Provides data interface"/>
    </node>

    <node id="StOutSocketMcVar" parent="./StOutSocketMc">
	<cont id="About" val="State Output socket for variable data, multicontent"/>
	<cont node="./PinData" id="Required" val="MDVarGet"/>
    </node>

    <!-- Input socket -->
    <node id="StInpSocket" parent="/*/Modules/SysComps/SocketOut">
	<!-- Pin Des observer. Requires DES observer interface to handle activation of the state -->
	<node id="PinObs" parent="/*/Modules/SysComps/ConnPoint"> 
	    <cont node="./Required" val="MDesObserver"/>
	</node>
	<!-- Pin Data observer. Provides data interface -->
	<node id="PinData" parent="/*/Modules/SysComps/ConnPoint"> 
	</node>
    </node>

    <!-- State Input socket, multicontent -->
    <node id="StInpSocketMc" parent="/*/Modules/SysComps/SocketMc">
	<cont id="About" val="State Input socket, multicontent"/>
	<node id="PinObs" parent="ConnPointMc"> 
	    <cont id="About" val="Pin Des observer. Requires DES observer interface to handle activation of the state"/>
	    <cont id="Required" val="MDesObserver"/>
	</node>
	<node id="PinData" parent="ConnPointMc"> 
	    <cont id="About" val="Pin Data observer. Provides data interface"/>
	</node>
    </node>

    <!-- State Input socket, multicontent, monolitic -->
    <node id="StInpSocketMcm" parent="ASocketMcm">
	<cont id="About" val="State Input socket, multicontent, monolitic"/>
	<cont id="Direction" val="Inp"/>
	<node id="PinObs" parent="ConnPointMc"> 
	    <cont id="About" val="Pin Des observer. Requires DES observer interface to handle activation of the state"/>
	    <cont id="Required" val="MDesObserver"/>
	</node>
	<node id="PinData" parent="ConnPointMc"> 
	    <cont id="About" val="Pin Data observer. Provides data interface"/>
	</node>
    </node>

    <!-- State Input socket, multicontent, monolitic, unit pins -->
    <node id="StInpSocketMcmu" parent="ASocketMcm">
	<cont id="About" val="State Input socket, multicontent, monolitic, unit pins"/>
	<cont id="Direction" val="Inp"/>

	<node id="PinObs" parent="ConnPointMcu"/> 
	<cont node="./PinObs" id="About" val="Pin Des observer. Requires DES observer interface to handle activation of the state"/>
	<cont node="./PinObs" id="Required" val="MDesObserver"/>

	<node id="PinData" parent="ConnPointMcu"/> 
	<cont node="./PinData" id="About" val="Pin Data observer. Provides data interface"/>
    </node>

    <node id="StInpSocketMcVar" parent="./StInpSocketMc">
	<cont id="About" val="State Input socket for variable data, multicontent"/>
	<cont node="./PinData" id="Provided" val="MDVarGet"/>
    </node>

    <!-- Input of standard Int State -->
    <node id="StIntInp" parent="/*/Modules/SysComps/ExtenderInpBase"> 
	<node id="Int" parent="./../StInpSocket"> 
	    <cont node="./PinData/Provided" val="MDIntGet"/>
	</node>
    </node>

    <!-- Output of standard Int State -->
    <node id="StIntOut" parent="/*/Modules/SysComps/ExtenderOutBase"> 
	<node id="Int" parent="./../StOutSocket"> 
	    <cont node="./PinData/Required" val="MDIntGet"/>
	</node>
    </node>

    <!-- Input of standard variable State -->
    <node id="StVarInp" parent="Vert">
	<node id="MAExteder" parent="ExtenderAgentInp"/>
	<node id="Int" parent="./../StInpSocket"> 
	    <cont node="./PinData/Provided" val="MDVarGet"/>
	</node>
    </node>

    <node id="StVarInpMc" parent="Vert">
	<node id="MAExteder" parent="AExtender"/>
	<node id="Int" parent="./../StInpSocketMc"> 
	    <cont id="Provided" node="./PinData" val="MDVarGet"/>
	</node>
    </node>

    <!-- Output of standard variable State -->
    <node id="StVarOut" parent="Vert">
	<node id="MAExteder" parent="ExtenderAgentOut"/>
	<node id="Int" parent="./../StOutSocket"> 
	    <cont node="./PinData/Required" val="MDVarGet"/>
	</node>
    </node>

    <node id="StVarOutMc" parent="Vert">
	<node id="MAExteder" parent="AExtender"/>
	<cont id="Direction" val="Out"/>
	<node id="Int" parent="./../StOutSocketMc"> 
	    <cont id="Required" node="./PinData" val="MDVarGet"/>
	</node>
    </node>

    <node id="ExtStInpSocketMc" parent="/*/Modules/SysComps/ExtenderInpMc"> 
	<node id="Int" parent="./../StInpSocketMc"/> 
	<cont targ="./Int" id="Direction" val="Out"/>
    </node>

    <node id="ExtStOutSocketMc" parent="/*/Modules/SysComps/ExtenderOutMc"> 
	<node id="Int" parent="./../StOutSocketMc"/> 
    </node>

    <node id="ExtStOutSocketMcVar" parent="/*/Modules/SysComps/ExtenderOutMc">
	<cont id="About" val="Extender of state output socket, data variable, multicontent"/>
	<node id="Int" parent="./../StOutSocketMcVar"/>
	<cont targ="./Int" id="Direction" val="Inp"/>
    </node>

    <node id="ExtStInpSocketMcVar" parent="./ExtStInpSocketMc">
	<cont id="About" val="Extender of state input socket, data variable, multicontent"/>
	<cont targ="./Int/PinData" id="Provided" val="MDVarGet"/>
    </node>

    <!-- Input of int transition -->
    <node id="TrIntInp" parent="/*/Modules/SysComps/ConnPointInp"> 
	<cont node="./Required" val="MDIntGet"/>
    </node>

    <!-- Input of int transition -->
    <node id="TrVarInp" parent="/*/Modules/SysComps/ConnPointInp"> 
	<cont node="./Required" val="MDVarGet"/>
    </node>

    <!-- Transition of integer data -->
    <node id="TrInt" parent="Syst"> 
	<node id="Inp" parent="/*/Modules/SysComps/ConnPointInp"> 
	    <cont node="./Required" val="MDIntGet"/>
	</node>
	<node id="Out" parent="/*/Modules/SysComps/ConnPointOut"> 
	    <cont node="./Provided" val="MDIntGet"/>
	</node>
    </node>

    <!-- Transition of integer data : Increment -->
    <node id="TrIncInt" parent="./TrInt"> 
	<node id="TrAgt" parent="ATrIncInt"/> 
    </node>

    <!-- Transition of integer data : Multiplication -->
    <node id="TrMplInt" parent="./TrInt"> 
	<node id="TrAgt" parent="ATrMplInt"/> 
    </node>

    <!-- Transition of integer data : Division -->
    <node id="TrDivInt" parent="./TrInt"> 
	<node id="TrAgt" parent="ATrDivInt"/> 
	<node id="Inp_DR" parent="./../TrIntInp"/> 
    </node>

    <!-- Transition of integer data : Subtraction -->
    <node id="TrSubInt" parent="./TrInt"> 
	<node id="TrAgt" parent="ATrSubInt"/> 
	<node id="Inp_Sub" parent="./../TrIntInp"/> 
    </node>

    <!-- Transition of variable data -->
    <node id="TrVar" parent="Syst"> 
	<node id="Inp" parent="/*/Modules/SysComps/ConnPointInp"> 
	    <cont node="./Required" val="MDVarGet"/>
	</node>
	<node id="Out" parent="/*/Modules/SysComps/ConnPointOut"> 
	    <cont node="./Provided" val="MDVarGet"/>
	</node>
	<node id="ViewData" parent="Vert">
	    <node id="Res" parent="Prop"/>
	</node>
    </node>

    <!-- Transition of variable data : Multiplication -->
    <node id="TrMplVar" parent="./TrVar"> 
	<node id="TrAgt" parent="ATrMplVar"/> 
	<cont node="./ViewData/Res" ref="./../../TrAgt"/>
    </node>

    <!-- Transition of variable data : Division -->
    <node id="TrDivVar" parent="./TrVar"> 
	<node id="TrAgt" parent="ATrDivVar"/> 
	<node id="Inp_Dvs" parent="./../TrVarInp"/> 
	<cont node="./ViewData/Res" ref="./../../TrAgt"/>
    </node>

    <!-- Transition of variable data : Composing vector -->
    <node id="TrCpsVectVar" parent="./TrVar"> 
	<node id="TrAgt" parent="ATrCpsVectVar"/> 
	<change node="./Inp" attr="id" val="Inp0"/>
	<node id="Inp1" parent="./../TrVarInp"/> 
	<node id="Inp2" parent="./../TrVarInp"/> 
	<cont node="./ViewData/Res" ref="./../../TrAgt"/>
    </node>

    <!-- Transition of variable data : Switch -->
    <node id="TrSwitchVar" parent="./TrVar"> 
	<node id="TrAgt" parent="ATrSwitchVar"/> 
	<change node="./Inp" attr="id" val="Sel"/>
	<node id="Inp1" parent="./../TrVarInp"/> 
	<node id="Inp2" parent="./../TrVarInp"/> 
    </node>

    <!-- Transition of variable data : Getting coord of vector -->
    <node id="TrAtVar" parent="./TrVar"> 
	<node id="TrAgt" parent="ATrAtVar"/> 
	<node id="Index" parent="./../TrIntInp"/> 
    </node>

    <!-- Transition of variable data : Boolean comparition -->
    <node id="TrLTVar" parent="./TrVar"> 
	<node id="AF_Lt" parent="ATrBcmpVar"/> 
	<change node="./Inp" attr="id" val="Inp1"/>
	<node id="Inp2" parent="./../TrVarInp"/> 
	<cont node="./ViewData/Res" ref="./../../AF_Lt"/>
    </node>

    <!-- Transition of variable data : Boolean comparition -->
    <node id="TrLEVar" parent="./TrVar"> 
	<node id="AF_Le" parent="ATrBcmpVar"/> 
	<change node="./Inp" attr="id" val="Inp1"/>
	<node id="Inp2" parent="./../TrVarInp"/> 
	<cont node="./ViewData/Res" ref="./../../AF_Le"/>
    </node>

    <!-- Transition of variable data : Boolean comparition -->
    <node id="TrEQVar" parent="./TrVar"> 
	<node id="AF_Eq" parent="ATrBcmpVar"/> 
	<change node="./Inp" attr="id" val="Inp1"/>
	<node id="Inp2" parent="./../TrVarInp"/> 
	<cont node="./ViewData/Res" ref="./../../AF_Eq"/>
    </node>

    <!-- Transition of variable data : Boolean comparition -->
    <node id="TrGTVar" parent="./TrVar"> 
	<node id="AF_Gt" parent="ATrBcmpVar"/> 
	<change node="./Inp" attr="id" val="Inp1"/>
	<node id="Inp2" parent="./../TrVarInp"/> 
	<cont node="./ViewData/Res" ref="./../../AF_Gt"/>
    </node>

    <!-- Transition of variable data : Boolean comparition -->
    <node id="TrGEVar" parent="./TrVar"> 
	<node id="AF_Ge" parent="ATrBcmpVar"/> 
	<change node="./Inp" attr="id" val="Inp1"/>
	<node id="Inp2" parent="./../TrVarInp"/> 
	<cont node="./ViewData/Res" ref="./../../AF_Ge"/>
    </node>

    <!-- Transition supported combined chain approach, ref ds_mae_scc -->

    <!-- Transition of variable data -->
    <node id="TrcVar" parent="Syst"> 
	<node id="Inp" parent="ConnPointMcu"/> 
	<cont node="./Inp" val="{Required:'MDVarGet' Provided:'MDesObserver'}"/>

	<node id="Out" parent="ConnPointMcu"/> 
	<cont node="./Out" val="{Required:'MDesObserver' Provided:'MDVarGet'}"/>
    </node>

    <!-- Transition of variable data : Addition -->
    <node id="TrcAddVar" parent="./TrcVar"> 
	<node id="TrAgt" parent="ATrcAddlVar"/> 
	<cont node="./ViewData/Res" ref="./../../TrAgt"/>
    </node>



    <!-- END. Transition supported combined chain approach, ref ds_mae_scc -->


    <!-- State base -->
    <node id="State" parent="/*/Modules/IncapsComps/Incaps"> 

	<node id="StateAgt" parent="StateAgent"/> 

	<!-- TODO [YB] Do we need dedicated CP or component has to notify it's mgr? -->
	<node node="./Capsule" id="Sync" parent="/*/Modules/SysComps/ConnPoint"> 
	    <cont node="./Provided" val="MDesSyncable"/>
	</node>
	<!-- Input -->
	<node node="./Capsule" id="Inp" parent="/*/Modules/SysComps/ExtenderInpBase"> 
	    <node id="Int" parent="./../../../StInpSocket"/> 
	</node>
	<!-- Output -->
	<node node="./Capsule" id="Out" parent="/*/Modules/SysComps/ExtenderOutBase"> 
	    <node id="Int" parent="./../../../StOutSocket"/> 
	</node>
    </node>

    <!-- State base, multicontent -->
    <node id="StateMc" parent="/*/Modules/IncapsComps/Incaps"> 
	<cont id="About" val="DES state multicontent base"/>
	<node id="StateAgt" parent="StateAgent"/> 
	<node node="./Capsule" id="Sync" parent="ConnPointMc"> 
	    <cont id="Provided" val="MDesSyncable"/>
	</node>
	<node node="./Capsule" id="Inp" parent="/*/Modules/SysComps/ExtenderInpMc"> 
	    <node id="Int" parent="./../../../StInpSocketMc"/> 
	</node>
	<node node="./Capsule" id="Out" parent="/*/Modules/SysComps/ExtenderOutMc"> 
	    <node id="Int" parent="./../../../StOutSocketMc"/> 
	</node>
    </node>

    <!-- State base, multicontent, using monolitic extenders -->
    <node id="StateMcm" parent="/*/Modules/IncapsComps/Incaps"> 
	<cont id="About" val="DES state multicontent base"/>
	<node id="StateAgt" parent="StateAgent"/> 
	<node node="./Capsule" id="Sync" parent="ConnPointMc"> 
	    <cont id="Provided" val="MDesSyncable"/>
	</node>
	<node node="./Capsule" id="Inp" parent="AExtdInp"> 
	    <node id="Int" parent="./../../../StInpSocketMcm"/> 
	</node>
	<node node="./Capsule" id="Out" parent="AExtdOut"> 
	    <node id="Int" parent="./../../../StOutSocketMcm"/> 
	</node>
    </node>

    <!-- State base, multicontent, using monolitic extenders and unit pins in sock -->
    <node id="StateMcmu" parent="/*/Modules/IncapsComps/Incaps"> 
	<cont id="About" val="DES state base, multicontent, monolitic, unit pins conns "/>
	<node id="StateAgt" parent="StateAgent"/> 
	<node node="./Capsule" id="Sync" parent="ConnPointMcu"/> 
	<cont node="./Capsule/Sync" id="Provided" val="MDesSyncable"/>
	    
	<node node="./Capsule" id="Inp" parent="AExtduInp"/> 
	<node node="./Capsule/Inp" id="Int" parent="./../StInpSocketMcmu"/> 

	<node node="./Capsule" id="Out" parent="AExtduOut"/> 
	<node node="./Capsule/Out" id="Int" parent="./../StOutSocketMcmu"/> 
    </node>



    <node id="StateInt" parent="./State"> 

	<node id="Confirmed" parent="/*/Modules/DataComps/DataSCInt"/>
	<node id="Prepared" parent="/*/Modules/DataComps/DataSCInt"/>

	<cont node="./Capsule/Inp/Int/PinData/Provided" val="MDIntGet"/>
	<cont node="./Capsule/Out/Int/PinData/Required" val="MDIntGet"/>

	<node id="E_Conf_Out" parent="Edge"> 
	    <cont node="./P1" val="./../../Confirmed/Capsule/Out"/> 
	    <cont node="./P2" val="./../../Capsule/Out/Int/PinData"/> 
	</node>

	<node id="E_PrepToConf" parent="Edge"> 
	    <cont node="./P1" val="./../../Prepared/Capsule/Out"/> 
	    <cont node="./P2" val="./../../Confirmed/Capsule/Inp"/> 
	</node>
    </node>

    <node id="StateVar" parent="./State"> 

	<node id="Confirmed" parent="/*/Modules/DataComps/DataSCVar"/>
	<node id="Prepared" parent="/*/Modules/DataComps/DataSCVar"/>

	<cont node="./Capsule/Inp/Int/PinData/Provided" val="MDVarGet"/>
	<cont node="./Capsule/Out/Int/PinData/Required" val="MDVarGet"/>

	<node id="E_Conf_Out" parent="Edge"> 
	    <cont node="./P1" ref="./../../Confirmed/Capsule/Out"/> 
	    <cont node="./P2" ref="./../../Capsule/Out/Int/PinData"/> 
	</node>
	<node id="E_PrepToConf" parent="Edge"> 
	    <cont node="./P1" ref="./../../Prepared/Capsule/Out"/> 
	    <cont node="./P2" ref="./../../Confirmed/Capsule/Inp"/> 
	</node>
    </node>

    <!-- State with variable type data, multicontent -->
    <node id="StateVarMc" parent="./StateMc"> 
	<cont id="About" val="DES state with variable type data, multicontent"/>
	<node id="Confirmed" parent="/*/Modules/DataComps/DataSCVarMc"/>
	<node id="Prepared" parent="/*/Modules/DataComps/DataSCVarMc"/>
	<cont node="./Capsule/Inp/Int/PinData" id="Provided" val="MDVarGet"/>
	<cont node="./Capsule/Out/Int/PinData" id="Required" val="MDVarGet"/>

	<node id="E_Conf_Out" parent="Aedge"> 
	    <cont id="P1" ref="./../Confirmed/Capsule/Out"/> 
	    <cont id="P2" ref="./../Capsule/Out/Int/PinData"/> 
	</node>
	<node id="E_PrepToConf" parent="Aedge"> 
	    <cont id="P1" ref="./../Prepared/Capsule/Out"/> 
	    <cont id="P2" ref="./../Confirmed/Capsule/Inp"/> 
	</node>
    </node>

    <!-- State with variable type data, multicontent, monolitic extenders -->
    <node id="StateVarMcm" parent="./StateMcm"> 
	<cont id="About" val="DES state with variable type data, multicontent"/>
	<node id="Confirmed" parent="/*/Modules/DataComps/DataSCVarMc"/>
	<node id="Prepared" parent="/*/Modules/DataComps/DataSCVarMc"/>
	<cont node="./Capsule/Inp/Int/PinData" id="Provided" val="MDVarGet"/>
	<cont node="./Capsule/Out/Int/PinData" id="Required" val="MDVarGet"/>

	<node id="E_Conf_Out" parent="Aedge"> 
	    <cont id="P1" ref="./../Confirmed/Capsule/Out"/> 
	    <cont id="P2" ref="./../Capsule/Out/Int/PinData"/> 
	</node>
	<node id="E_PrepToConf" parent="Aedge"> 
	    <cont id="P1" ref="./../Prepared/Capsule/Out"/> 
	    <cont id="P2" ref="./../Confirmed/Capsule/Inp"/> 
	</node>
    </node>

    <!-- State with variable type data, multicontent, monolitic extenders, unit pins -->
    <node id="StateVarMcmu" parent="./StateMcmu"> 
	<cont id="About" val="DES state with variable type data, multicontent, unit pins"/>
	<node id="Confirmed" parent="/*/Modules/DataComps/DataSCVarMc"/>
	<node id="Prepared" parent="/*/Modules/DataComps/DataSCVarMc"/>
	<cont node="./Capsule/Inp/Int/PinData" id="Provided" val="MDVarGet"/>
	<cont node="./Capsule/Out/Int/PinData" id="Required" val="MDVarGet"/>

	<node id="E_Conf_Out" parent="Aedge"> 
	    <cont id="P1" ref="./../Confirmed/Capsule/Out"/> 
	    <cont id="P2" ref="./../Capsule/Out/Int/PinData"/> 
	</node>
	<node id="E_PrepToConf" parent="Aedge"> 
	    <cont id="P1" ref="./../Prepared/Capsule/Out"/> 
	    <cont id="P2" ref="./../Confirmed/Capsule/Inp"/> 
	</node>
    </node>

    <!-- State with variable type data, multicontent, monolitic agent, monolitic extenders, unit pins -->
    <node id="StateVarMcmau" parent="/*/Modules/IncapsComps/Incaps"> 
	<cont id="About" val="DES state with variable type data, multicontent, monolitic agent and CPs, unit pins"/>
	<node id="StateAgt" parent="AState"/> 
	<node node="./Capsule" id="Sync" parent="ConnPointMcu"/> 
	<cont node="./Capsule/Sync" id="Provided" val="MDesSyncable"/>

	<node id="TransOut" parent="ConnPointMcu"/>
	<cont node="./TransOut" id="Required" val="MDVarGet"/>
	    
	<node node="./Capsule" id="Inp" parent="AExtduInp"/> 
	<node node="./Capsule/Inp" id="Int" parent="./../StInpSocketMcmu"/> 

	<node node="./Capsule" id="Out" parent="AExtduOut"/> 
	<node node="./Capsule/Out" id="Int" parent="./../StOutSocketMcmu"/> 

	<cont node="./Capsule/Inp/Int/PinData" id="Provided" val="MDVarGet"/>
	<cont node="./Capsule/Out/Int/PinData" id="Required" val="MDVarGet"/>

	<node id="E_Conf_Out" parent="Aedge"> 
	    <cont id="P1" ref="./../StateAgt"/> 
	    <cont id="P2" ref="./../Capsule/Out/Int/PinData"/> 
	</node>
    </node>


    <!-- Improved state - combined data is used instead of prepared + confirmed
	 Note: to initiate the state you still need to initiate value of prepared.
	 This is required to define type of data because the current scheme doesn't
	 allow to implicitly get type of confirmed
	 -->
    <node id="StateVarC" parent="./State"> 

	<node id="Data" parent="/*/Modules/IncapsComps/Incaps">
	    <node id="Confirmed" parent="/*/Modules/DataComps/DataSCVar"/>
	    <node id="Prepared" parent="/*/Modules/DataComps/DataSCVar"/>
	    <node node="./Capsule" id="Inp" parent="/*/Modules/SysComps/ExtenderInp"> <cont node="./Int/Provided" val="MDVarGet"/> </node>
	    <node node="./Capsule" id="Out" parent="/*/Modules/SysComps/ExtenderOut"> <cont node="./Int/Required" val="MDVarGet"/> </node>
	    <node id="E_Inp_Prep" parent="Edge"> 
		<cont node="./P1" ref="./../../Capsule/Inp/Int"/> 
		<cont node="./P2" ref="./../../Prepared/Capsule/Inp"/> 
	    </node>
	    <node id="E_Prep_Conf" parent="Edge">
		<cont node="./P1" ref="./../../Prepared/Capsule/Out"/> 
		<cont node="./P2" ref="./../../Confirmed/Capsule/Inp"/> 
	    </node>
	    <node id="E_Conf_Out" parent="Edge"> 
		<cont node="./P1" ref="./../../Confirmed/Capsule/Out"/> 
		<cont node="./P2" ref="./../../Capsule/Out/Int"/> 
	    </node>
	    <node id="ViewData" parent="Vert">
		<node id="Val" parent="Prop">
		    <cont ref="./../../Confirmed/Value"/>
		</node>
	    </node>
	</node>

	<cont node="./Capsule/Inp/Int/PinData/Provided" val="MDVarGet"/>
	<cont node="./Capsule/Out/Int/PinData/Required" val="MDVarGet"/>

	<node id="E_Data_Out" parent="Edge"> 
	    <cont node="./P1" ref="./../../Data/Capsule/Out"/> 
	    <cont node="./P2" ref="./../../Capsule/Out/Int/PinData"/> 
	</node>
	<node id="ViewData" parent="Vert">
	    <node id="Val" parent="Prop">
		<cont ref="./../../Data/Confirmed/Value"/>
	    </node>
	</node>
    </node>

    <!-- Multicontent variant -->
    <node id="StateVarCMc" parent="./StateMc"> 
	<cont id="About" val="DES state with variable type data, combined data is used instead of prepared + confirmed, multicontent"/>

	<node id="Data" parent="/*/Modules/IncapsComps/Incaps">
	    <node id="Confirmed" parent="/*/Modules/DataComps/DataSCVarMc"/>
	    <node id="Prepared" parent="/*/Modules/DataComps/DataSCVarMc"/>
	    <node node="./Capsule" id="Inp" parent="/*/Modules/SysComps/ExtenderInpMc">
		<node id="Int" parent="ConnPointMc"/>
		<cont targ="./Int" id="Provided" val="MDVarGet"/>
	    </node>
	    <node node="./Capsule" id="Out" parent="/*/Modules/SysComps/ExtenderOutMc">
		<node id="Int" parent="ConnPointMc"/>
		<cont targ="./Int" id="Required" val="MDVarGet"/>
	    </node>
	    <node id="E_Inp_Prep" parent="Aedge"> 
		<cont id="P1" ref="./../Capsule/Inp/Int"/> 
		<cont id="P2" ref="./../Prepared/Capsule/Inp"/> 
	    </node>
	    <node id="E_Prep_Conf" parent="Aedge">
		<cont id="P1" ref="./../Prepared/Capsule/Out"/> 
		<cont id="P2" ref="./../Confirmed/Capsule/Inp"/> 
	    </node>
	    <node id="E_Conf_Out" parent="Aedge"> 
		<cont id="P1" ref="./../Confirmed/Capsule/Out"/> 
		<cont id="P2" ref="./../Capsule/Out/Int"/> 
	    </node>
	    <cont id="ViewData.Val" val="./Confirmed/ADVar"/>
	</node>

	<cont node="./Capsule/Inp/Int/PinData" id="Provided" val="MDVarGet"/>
	<cont node="./Capsule/Out/Int/PinData" id="Required" val="MDVarGet"/>

	<node id="E_Data_Out" parent="Aedge"> 
	    <cont id="P1" ref="./../Data/Capsule/Out"/> 
	    <cont id="P2" ref="./../Capsule/Out/Int/PinData"/> 
	</node>

	<cont id="ViewData.Val" val="./Data/Confirmed/ADVar"/>
    </node>


    <!-- StateVarC improved to use data with separate type -->

    <node id="StateVarCT" parent="./State"> 

	<node id="Data" parent="/*/Modules/IncapsComps/Incaps">
	    <node id="Confirmed" parent="/*/Modules/DataComps/DataSCTVar"/>
	    <node id="Prepared" parent="/*/Modules/DataComps/DataSCTVar"/>
	    <node node="./Capsule" id="Inp" parent="/*/Modules/SysComps/ExtenderInp"> <cont node="./Int/Provided" val="MDVarGet"/> </node>
	    <node node="./Capsule" id="Out" parent="/*/Modules/SysComps/ExtenderOut"> <cont node="./Int/Required" val="MDVarGet"/> </node>
	    <node id="E_Inp_Prep" parent="Edge"> 
		<cont node="./P1" ref="./../../Capsule/Inp/Int"/> 
		<cont node="./P2" ref="./../../Prepared/Capsule/Inp"/> 
	    </node>
	    <node id="E_Prep_Conf" parent="Edge">
		<cont node="./P1" ref="./../../Prepared/Capsule/Out"/> 
		<cont node="./P2" ref="./../../Confirmed/Capsule/Inp"/> 
	    </node>
	    <node id="E_Conf_Out" parent="Edge"> 
		<cont node="./P1" ref="./../../Confirmed/Capsule/Out"/> 
		<cont node="./P2" ref="./../../Capsule/Out/Int"/> 
	    </node>
	    <node id="ViewData" parent="Vert">
		<node id="Val" parent="Prop">
		    <cont ref="./../../Confirmed/Value"/>
		</node>
	    </node>
	</node>

	<cont node="./Capsule/Inp/Int/PinData/Provided" val="MDVarGet"/>
	<cont node="./Capsule/Out/Int/PinData/Required" val="MDVarGet"/>

	<node id="E_Data_Out" parent="Edge"> 
	    <cont node="./P1" ref="./../../Data/Capsule/Out"/> 
	    <cont node="./P2" ref="./../../Capsule/Out/Int/PinData"/> 
	</node>
	<node id="ViewData" parent="Vert">
	    <node id="Val" parent="Prop">
		<cont ref="./../../Data/Confirmed/Value"/>
	    </node>
	</node>
    </node>



    <!-- DES base -->
    <node id="Des" parent="/*/Modules/IncapsComps/Incaps"> 
	<node id="DesAgt" parent="ADes"/> 
	<node node="./Capsule" id="Sync" parent="/*/Modules/SysComps/ConnPoint"> 
	    <cont node="./Provided" val="MDesSyncable"/>
	</node>
    </node>

    <!-- DES base, multicontent -->
    <node id="DesMc" parent="/*/Modules/IncapsComps/Incaps"> 
	<cont id="About" val="Discrete Events System (DES) multicontent base"/>
	<node id="DesAgt" parent="ADes"/> 
	<node node="./Capsule" id="Sync" parent="ConnPointMc"> 
	    <cont id="Provided" val="MDesSyncable"/>
	</node>
    </node>

    <!-- DES ticks source -->
    <node id="DesTicker" parent="/*/Modules/IncapsComps/Incaps"> 
	<node node="./Capsule" id="Out" parent="/*/Modules/SysComps/ConnPointOut"> 
	    <cont node="./Required" val="MDesSyncable"/>
	</node>
	<node id="DesSyncAgent" parent="ADesSync"/> 
    </node>

    <!-- DES ticks source, multicontent -->
    <node id="DesTickerMc" parent="/*/Modules/IncapsComps/Incaps"> 
	<cont id="About" val="DES ticks generator"/>
	<node node="./Capsule" id="Out" parent="/*/Modules/SysComps/ConnPointOutMc"> 
	    <cont id="Required" val="MDesSyncable"/>
	</node>
	<node id="DesSyncAgent" parent="ADesSync"/> 
    </node>

</node>

