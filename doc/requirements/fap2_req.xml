<?xml version="1.0" ?>

<!DOCTYPE article SYSTEM "/usr/share/sgml/docbook/dtd/xml/4.5/docbookx.dtd">


<article status="draft" class="specification"> <title>Enhanced Discrete Events System framework (graph based). Requirements.</title>

    <articleinfo>
	<author><personname><firstname>Yuri</firstname><surname>Borisov</surname></personname>
	    <email>yuri.borisov.v@gmail.com</email></author> 

	<releaseinfo>Ver.0.01 at 30-Nov-2011</releaseinfo>

	<abstract>
	    <simpara>This document collects use-cases and software requirements for Discrete Events System framework ver 2.</simpara>
	</abstract>

	<revhistory>
	    <revision> <revnumber>0.01</revnumber> <date>30-Nov-2011</date> <authorinitials>Yuri Borisov</authorinitials>
		<revremark>Initial version</revremark> </revision>
	    <revision> <revnumber>0.02</revnumber> <date>19-Mar-2013</date> <authorinitials>Yuri Borisov</authorinitials>
		<revremark>Added <xref linkend="uc_03"/></revremark> </revision>
	    <revision> <revnumber>0.03</revnumber> <date>28-Mar-2013</date> <authorinitials>Yuri Borisov</authorinitials>
		<revremark>Added <xref linkend="uc_grahp_04"/></revremark> </revision>
	</revhistory>

    </articleinfo>

    <bibliolist>
	<title>References</title>
    </bibliolist>

    
    <sect1 id="uc"> <title>Use cases</title>
	<sect2 id="uc_01"><title>UC_01 Logging</title>
	    <sect3><title>Description</title>
		CLIENT requests logging and specifies logging parameters - SYSTEM provides CLIENT with logging data
	    </sect3>
	    <sect3><title>Extension of</title>
	    </sect3>
	    <sect3><title>Extended by</title>
		<itemizedlist>
		    <listitem><xref linkend="uc_01_02"/></listitem>
		</itemizedlist>
	    </sect3>
	</sect2>
	<sect2 id="uc_01_02"><title>UC_002 Logging configuration of element</title>
	    <sect3><title>Description</title>
		CLIENT selects some particular element and requests logging configuration - SYSTEM provides CLIENT with means of 
		logging configuration.
	    </sect3>
	    <sect3><title>Extension of</title>
		<simpara><xref linkend="uc_01"/></simpara>
	    </sect3>
	    <sect3><title>Extended by</title>
	    </sect3>
	</sect2>

	<sect2 id="uc_graph_01"><title>UC_GRAPH_01 Getting parent nodes available.</title>
	    <sect3><title>Description</title>
		CLIENT requests adding new graph node into the graph - SYSTEM offers the following ways to do this:
		<itemizedlist>
		    <listitem>From the current graphs loaded in environment by specifyinc local URI </listitem>
		    <listitem>From external graph by specifying full URI (URI includes graph spec and node within the spec)</listitem>
		    <listitem>From graph provider</listitem>
		</itemizedlist>
	    </sect3>
	</sect2>
	<sect2 id="uc_graph_02"><title>UC_GRAPH_02 Creation from spec</title>
	    <sect3><title>Description</title>
		CLIENT requests creation of graph by spec - SYSTEM creates the graph using the spec given.
	    </sect3>
	    <sect3><title>Extentions</title>
		<itemizedlist>
		    <listitem><xref linkend="uc_graph_02_1"/></listitem>
		</itemizedlist>
	    </sect3>
	</sect2>
	<sect2 id="uc_graph_02_1"><title>UC_GRAPH_02.1 Spec of creation </title>
	    <sect3><title>Description</title>
		[Ext UC_GRAPH_02] Graph spec consists of:
		<itemizedlist>
		    <listitem>Name</listitem>
		    <listitem>Parent</listitem>
		    <listitem>Mutations</listitem>
		</itemizedlist>
		<simpara>The mutation can be as:</simpara>
		<itemizedlist>
		    <listitem>Adding node or edge</listitem>
		    <listitem>Changing of node or edge attributes</listitem>
		    <listitem>Mutating of graph element if it's representing graph itself.</listitem>
		</itemizedlist>
		<simpara>The spec can be consider as "chromosome" of a graph. The spec can </simpara>
	    </sect3>
	    <sect3><title>Extentions</title>
	    </sect3>
	</sect2>
	<sect2 id="uc_graph_03"><title>UC_GRAPH_03 Serialization as spec</title>
	    <sect3><title>Description</title>
		CLIENT requests serialization - SYSTEM serialize the graph as graph spec.
	    </sect3>
	    <sect3><title>Extentions</title>
		<itemizedlist>
		    <listitem><xref linkend="uc_graph_02_1"/></listitem>
		</itemizedlist>
	    </sect3>
	</sect2>
	<sect2 id="uc_grahp_04"><title>UC_GRAHP_04 Providing ifaces</title>
	    <sect3><title>Description</title>
		CLIENT requests element for some interface - SYSTEM ensures elements providing interface or indicates that the interface 
		cannot be provided.
	    </sect3>
	    <sect3><title>Details</title>
		<itemizedlist>
		    <listitem>The corporative approach is to be used, so element can provide not only "it's owned" interface but 
			also interface provided by elements that "cooperate" to it.</listitem>
		    <listitem>The policy of providing interface in cooperative network is to be defined</listitem>
		</itemizedlist>
	    </sect3>
	</sect2>
	<sect2 id="uc_03"><title>UC_03 Connection</title>
	    <sect3><title>Description</title>
		CLIENT requests connecting two systems - SYSTEM allows connecting systems so one system gets able to communicate to another.
	    </sect3>
	    <sect3><title>Details</title>
		<itemizedlist>
		    <listitem>System contains end points for connection. Connection is established via creating relation between
			end points of two systems. Such connection endpoints are called Connection points (CP).</listitem>
		</itemizedlist>
	    </sect3>
	    <sect3><title>Extension of</title>
	    </sect3>
	    <sect3><title>Extended by</title>
		<itemizedlist>
		    <listitem><xref linkend="uc_06"/></listitem>
		</itemizedlist>
	    </sect3>
	</sect2>
	<sect2 id="uc_06"><title>UC_06 Extention</title>
	    <sect3><title>Description</title>
		CLIENT requests to exhibit iface of  some internal component of the system - SYSTEM provides this via having CP that on 
		one hand serves as end point for connection from external system but on the oner hand is connected to internal component.
		Such connection point is called Extention Point (EP).
	    </sect3>
	    <sect3><title>Details</title>
		<itemizedlist>
		    <listitem>. </listitem>
		</itemizedlist>
	    </sect3>
	    <sect3><title>Extension of</title>
		<itemizedlist>
		    <listitem><xref linkend="uc_03"/></listitem>
		</itemizedlist>
	    </sect3>
	</sect2>
	<sect2 id="uc_007"><title>UC_007 CPs providing interfaces</title>
	    <sect3><title>Description</title>
		CLIENT requests CP for some interface - CP provides only interface that is specified as provided.
	    </sect3>
	    <sect3><title>Details</title>
		<itemizedlist>
		    <listitem>There is no possibility for CLIENT to obtains some other interface of system via the CP. </listitem>
		    <listitem>Is this constraint really needed? In fact the connecting policies avoid connecing incompatible CP.
			The only problem can be access through C interface.</listitem>
		</itemizedlist>
	    </sect3>
	    <sect3><title>Extension of</title>
	    </sect3>
	    <sect3><title>Extended by</title>
		<itemizedlist>
		    <listitem><xref linkend="uc_008"/></listitem>
		    <listitem><xref linkend="uc_009"/></listitem>
		    <listitem><xref linkend="uc_010"/></listitem>
		</itemizedlist>
	    </sect3>
	</sect2>
	<sect2 id="uc_008"><title>UC_008 CPs providing multiple instances of interfaces</title>
	    <sect3><title>Description</title>
		CLIENT requests CP for instances of some interface - CP provides available instances of specified  interface.
	    </sect3>
	    <sect3><title>Details</title>
		<itemizedlist>
		    <listitem>One important case is when some system internal component requests ifaces from system connection point. 
			Multiple connection to that point are allowed. So the requiest shall result in returning the set of iface 
			implementations.
		    </listitem>
		</itemizedlist>
	    </sect3>
	    <sect3><title>Extension of</title>
		<xref linkend="uc_007"/>
	    </sect3>
	    <sect3><title>Extended by</title>
		<itemizedlist>
		</itemizedlist>
	    </sect3>
	</sect2>
	<sect2 id="uc_009"><title>UC_009 Caching of Interfaces</title>
	    <sect3><title>Description</title>
		CLIENT: some element of system.
		CLIENT requests some element for interface - SYSTEM (requested element) returns the interface (or instances of 
		interface) and also caches the ifaces. CLIENT requests SYSTEM for the same interface - SYSTEM returns the
		cached instances of interface.
	    </sect3>
	    <sect3><title>Details</title>
		<itemizedlist>
		    <listitem> </listitem>
		</itemizedlist>
	    </sect3>
	    <sect3><title>Extension of</title>
		<xref linkend="uc_007"/>
	    </sect3>
	    <sect3><title>Extended by</title>
		<itemizedlist>
		</itemizedlist>
	    </sect3>
	</sect2>
	<sect2 id="uc_010"><title>UC_010 Interface requestor being notified of interface added</title>
	    <sect3><title>Description</title>
		CLIENT: some element of system - also named "interface requestor".
		CLIENT requests SYSTEM for interface - SYSTEM returns the interface (or instances of 
		interface). Some new interface that meets the request has been added - SYSTEM notifies CLIENT of that, so
		CLIENT can request refreshing interfaces in cache.
	    </sect3>
	    <sect3><title>Details</title>
		<itemizedlist>
		    <listitem> </listitem>
		</itemizedlist>
	    </sect3>
	    <sect3><title>Extension of</title>
		<xref linkend="uc_007"/>
	    </sect3>
	    <sect3><title>Extended by</title>
		<itemizedlist>
		</itemizedlist>
	    </sect3>
	</sect2>
	<sect2 id="uc_005"><title>UC_005 Sockets</title>
	    <sect3><title>Description</title>
		CLIENT requests connection of endpoints that are more complex that single CP - SYSTEM provides the means of connecting in 
		form of socket.
	    </sect3>
	    <sect3><title>Details</title>
		<itemizedlist>
		    <listitem>Socket is element that contains other CPs</listitem>
		    <listitem>Sockets are to be compatible in order to be connected.</listitem>
		</itemizedlist>
	    </sect3>
	</sect2>
	<sect2 id="uc_011"><title>UC_011 Extention of sockets</title>
	    <sect3><title>Description</title>
		CLIENT requests extending of some internal socket - SYSTEM extends the socket via proper extention point
		form of socket.
	    </sect3>
	    <sect3><title>Details</title>
		<itemizedlist>
		</itemizedlist>
	    </sect3>
	</sect2>
    </sect1>

</article>
